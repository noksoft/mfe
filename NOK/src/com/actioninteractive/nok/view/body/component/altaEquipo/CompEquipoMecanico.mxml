<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.actioninteractive.nok.model.CRUDModel;
			import com.actioninteractive.nok.model.EquipoModel;
			import com.actioninteractive.nok.view.body.component.altaEquipo.*;
			import com.actioninteractive.nok.vo.MarcaMotorVO;
			import com.actioninteractive.nok.vo.equipo.EquipoVO;
			
			import mx.collections.ArrayCollection;
			
			[Inject]
			[Bindable]
			public var crudModel:CRUDModel;
			
			[Inject]
			[Bindable]
			public var modelEquipo:EquipoModel;
			
			public var utilMantEquipo:UtilMantEquipo = new UtilMantEquipo();
			
			public function actualizarDTO():void{
				changeCambioAceite();
				changeCombustible();
				changeNumMotor();
				changeMarcaMotor();
				changeModeloMotor();
				changeTipoMedida();
				changeCilindros();
				changeHP();
				changeTorque();
				changekw();
				changeVoltaje();
				changePica();
				changeAmperes();
				changeCapPresion();
				changeGolpesXMinuto();
				changeCapCarga();
				changeLlanta();
				changeRin();
			}
			
			public function cleanComponent():void{
				nsCambAceite.value = 0;
				modelEquipo.equipoVO.cambioaceite = "";
				
				listCombustible.selectedIndex = -1;
				modelEquipo.equipoVO.combustible = "";
				
				txtNoMotor.text = "";
				modelEquipo.equipoVO.numeromotor = "";
				
				listMarcaMotor.selectedIndex = -1;
				modelEquipo.equipoVO.marcamotor = "";
				
				txtModeloMotor.text = "";
				modelEquipo.equipoVO.modelomotor = "";
				
				txtTipoMedida.text = "";
				modelEquipo.equipoVO.tipomedida = "";
				
				nstpCilindros.value = 0;
				modelEquipo.equipoVO.cilindros = "0";
				
				nstpHP.value = 0;
				modelEquipo.equipoVO.hp = "0";
				
				nstpTorque.value = 0;
				modelEquipo.equipoVO.torque = "0";
				
				nstpKW.value = 0;
				modelEquipo.equipoVO.kw = "0";
				
				nstpVoltaje.value = 0;
				modelEquipo.equipoVO.voltaje = "0";
				
				txtPica.text = "";
				modelEquipo.equipoVO.pica = "";
				
				nstpAmperes.value = 0;
				modelEquipo.equipoVO.amperes = "0";
				
				nstpCapPresion.value = 0;
				modelEquipo.equipoVO.capacidadpresion = "0";
				
				nstpGolpesMin.value = 0;
				modelEquipo.equipoVO.golpesminuto = "0";
				
				nstpCapCarga.value = 0;
				modelEquipo.equipoVO.capacidadcarga = "0";
				
				txtLlanta.text = "";
				modelEquipo.equipoVO.tipollanta = "";
				
				nstpRin.value = 10
				modelEquipo.equipoVO.rin = "10";
			}
			
			public function selectItem(_equipoVO:EquipoVO):void{
				nsCambAceite.value = Number(_equipoVO.cambioaceite);
				
				for(var ic:int = 0; ic < modelEquipo.acCombustible.length; ic++){
					var objc:Object = modelEquipo.acCombustible[ic];
					if(objc.name == _equipoVO.combustible){
						listCombustible.selectedIndex = ic;
					}
				}
				
				txtNoMotor.text = _equipoVO.numeromotor;
				
				for(var imm:int = 0; imm < modelEquipo.acMarcasMotor.length; imm++){
					var objmm:Object = modelEquipo.acMarcasMotor[imm];
					if(objmm.marcaMotor == _equipoVO.marcamotor){
						listMarcaMotor.selectedIndex = imm;
					}
				}
				
				txtModeloMotor.text = _equipoVO.modelomotor;
				nstpCilindros.value = Number(_equipoVO.cilindros);								
				nstpHP.value = Number(_equipoVO.hp);;
				nstpTorque.value = Number(_equipoVO.torque);
				nstpKW.value = Number(_equipoVO.kw);
				nstpVoltaje.value = Number(_equipoVO.voltaje);
				nstpAmperes.value = Number(_equipoVO.amperes);
				txtPica.text = _equipoVO.pica;
				nstpCapPresion.value = Number(_equipoVO.capacidadpresion);
				nstpGolpesMin.value = Number(_equipoVO.golpesminuto);
				nstpCapCarga.value = Number(_equipoVO.capacidadcarga);
				txtTipoMedida.text = _equipoVO.tipomedida;
				txtLlanta.text = _equipoVO.tipollanta;
				nstpRin.value = Number(_equipoVO.rin);
			}
			
			private function changeCambioAceite ():void{
				var value:String = String(nsCambAceite.value);
				if(value != ""){
					modelEquipo.equipoVO.cambioaceite = value;
				}
			}
			
			private function changeCombustible ():void{
				var item:Object = listCombustible.selectedItem;
				modelEquipo.equipoVO.combustible = item.name;
			}
			
			private function changeNumMotor ():void{
				var value:String = txtNoMotor.text;
				if(value != ""){
					modelEquipo.equipoVO.numeromotor = value;
				}
			}
			
			/**
			 * Guarda la marca de motor seleccionada
			 **/
			private function changeMarcaMotor ():void{
				var _marcaMotor:MarcaMotorVO = listMarcaMotor.selectedItem as MarcaMotorVO;
				modelEquipo.equipoVO.idMarcamotor = _marcaMotor.idMarcaMotor
				modelEquipo.equipoVO.marcamotor = _marcaMotor.marcaMotor;
			}
			
			/**
			 * Guarda el modelo del motor
			 **/
			private function changeModeloMotor ():void{
				var tempValue:String = txtModeloMotor.text;
				if(tempValue != ""){
					modelEquipo.equipoVO.modelomotor = tempValue;
					//modelEquipo.equipoVO.idModelomotor = tempValue;
				}
			}
			
			private function changeTipoMedida():void{
				var value:String = txtTipoMedida.text;
				if(value != ""){
					modelEquipo.equipoVO.tipomedida = value;
				}
			}
			
			/**
			 * Guarda el cambio de la selección de cilindros
			 **/
			private function changeCilindros ():void{
				var tempValue:Number = nstpCilindros.value;
				if(tempValue > 0){
					modelEquipo.equipoVO.cilindros = tempValue.toString();
				}
				
			}
			
			private function changeHP ():void{
				var value:String = String(nstpHP.value);
				if(value != ""){
					modelEquipo.equipoVO.hp = value;
				}
			}
			
			private function changeTorque ():void{
				var value:String = String(nstpTorque.value);
				if(value != ""){
					modelEquipo.equipoVO.torque = value;
				}
			}
			
			private function changekw ():void{
				var value:String = nstpKW.value.toString();
				if(value != ""){
					modelEquipo.equipoVO.kw = value;
				}
			}
			
			private function changeVoltaje ():void{
				var value:String = nstpVoltaje.value.toString();
				if(value != ""){
					modelEquipo.equipoVO.voltaje = value;
				}
			}
			
			private function changePica ():void{
				var value:String = txtPica.text;
				if(value != ""){
					modelEquipo.equipoVO.pica = value;
				}
			}
			
			private function changeAmperes ():void{
				var value:String = nstpAmperes.value.toString();
				if(value != ""){
					modelEquipo.equipoVO.amperes = value;
				}
			}
			
			private function changeCapPresion ():void{
				var value:String = nstpCapPresion.value.toString();
				if(value != ""){
					modelEquipo.equipoVO.capacidadpresion = value;
				}
			}
			
			private function changeGolpesXMinuto ():void{
				var value:String = nstpGolpesMin.value.toString();
				if(value != ""){
					modelEquipo.equipoVO.golpesminuto = value;
				}
			}
			
			private function changeCapCarga ():void{
				var value:String =nstpCapCarga.value.toString();
				if(value != ""){
					modelEquipo.equipoVO.capacidadcarga = value;
				}
			}
			
			private function changeLlanta ():void{
				var value:String = txtLlanta.text;
				if(value != ""){
					modelEquipo.equipoVO.tipollanta = value;
				}
			}
			
			private function changeRin():void{
				var value:String = String(nstpRin.value);
				if(value != ""){
					modelEquipo.equipoVO.rin = value;
				}else{
					modelEquipo.equipoVO.rin = "0";
				}
			}

		]]>
	</fx:Script>

	<s:layout>
		<s:HorizontalLayout paddingTop="40"/>
	</s:layout>
	<!--Contenedor principal-->
		
	<s:Group width="100%">
		<s:layout>
			<s:VerticalLayout verticalAlign="middle"/>
		</s:layout>
		<s:HGroup 
			width="100%" 
			verticalAlign="middle">
			<s:Label 
				text="Cambio de Aceite" 
				textAlign="right" 
				width="120"/>
			<s:NumericStepper
				id="nsCambAceite"
				snapInterval="500"
				minimum="500"
				maximum="500000"/>
			<s:Label 
				text="Combustible:" 
				textAlign="right" 
				width="120"/>
			<s:DropDownList
				id="listCombustible"
				dataProvider="{modelEquipo.acCombustible}"
				labelField="name"
				selectedIndex="-1"
				prompt="Selecciona una opción"/>
		</s:HGroup>
		
		<s:HGroup 
			width="100%" 
			verticalAlign="middle">
			<s:Label 
				text="No. de Motor" 
				textAlign="right" 
				width="120"/>
			<s:TextInput 
				id="txtNoMotor"
				width="300"
				maxChars="9"
				restrict="0-9"/>
			<s:Label 
				text="Marca Motor" 
				textAlign="right" 
				width="120"/>
			<s:DropDownList
				id="listMarcaMotor"
				width="100%" 
				prompt="Selecciona la marca" 
				dataProvider="{modelEquipo.acMarcasMotor}" 
				labelField="marcaMotor"/>			
		</s:HGroup>
		<s:HGroup 
			width="100%" 
			verticalAlign="middle">
			<s:Label 
				text="Modelo Motor" 
				textAlign="right" 
				width="120"/>
			<s:TextInput
				id="txtModeloMotor"
				width="120"/>
			<s:Label 
				text="Tipo de Medida" 
				textAlign="right" 
				width="120"/>
			<s:TextInput
				id="txtTipoMedida"
				width="120"
				text="Horas"
				keyDown="txtTipoMedida.enabled = true"
				keyUp="txtTipoMedida.enabled = false"/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<s:Label text="Cilindros" textAlign="right" width="120" top="4"/>
			<s:NumericStepper
				id="nstpCilindros"
				maximum="12"
				minimum="1"/>
			<s:Label 
				text="HP" 
				textAlign="right" 
				width="120"/>
			<s:NumericStepper
				id="nstpHP"
				snapInterval="500"
				minimum="500"
				maximum="500000"/>
			<s:Label 
				text="Torque" 
				textAlign="right" 
				width="120"/>
			<s:NumericStepper
				id="nstpTorque"
				snapInterval="50"
				minimum="10"
				maximum="500000"/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<s:Label 
				text="KW" 
				textAlign="right" 
				width="120" top="4"/>
			<s:NumericStepper
				id="nstpKW"
				snapInterval="1"
				maximum="10000"
				minimum="1"/>
			<s:Label 
				text="Voltaje" 
				textAlign="right" 
				width="120" top="4"/>
			<s:NumericStepper
				id="nstpVoltaje"
				snapInterval="1"
				maximum="10000"
				minimum="1"/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<s:Label text="Amperes" textAlign="right" width="120" top="4"/>
			<s:NumericStepper
				id="nstpAmperes"
				snapInterval="1"
				maximum="10000"
				minimum="1"/>
			<s:Label text="PICA" textAlign="right" width="120" top="4"/>
			<s:TextInput
				id="txtPica"
				width="120"/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<s:Label text="Capacidad de Presión" textAlign="right" width="120" top="4"/>
			<s:NumericStepper
				id="nstpCapPresion"
				snapInterval="1"
				maximum="10000"
				minimum="1"/>
			<s:Label text="Golpes x min." textAlign="right" width="120" top="4"/>
			<s:NumericStepper
				id="nstpGolpesMin"
				snapInterval="1"
				maximum="10000"
				minimum="1"/>
			<s:Label text="Capacidad de Carga" textAlign="right" width="120" top="4"/>
			<s:NumericStepper
				id="nstpCapCarga"
				snapInterval="1"
				maximum="20000"
				minimum="1"/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<s:Label 
				text="Llanta" 
				textAlign="right" 
				width="120"/>
			<s:TextInput
				id="txtLlanta"
				width="300"
				maxChars="15"/>
			<s:Label 
				text="Rin" 
				textAlign="right" 
				width="120"/>
			<s:NumericStepper
				id="nstpRin"
				maximum="30"
				minimum="15"/>
		</s:HGroup>
	</s:Group>
</s:Group>
