<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               xmlns:components="com.hillelcoren.components.*"
               width="474" height="500" close="PopUpManager.removePopUp(this)" title="Asigna Falla">
    <fx:Metadata>
        [Event(name="NotificaFallaAgregada", type="events.NotificaFallaAgregada")]

    </fx:Metadata>
    <fx:Script>
		<![CDATA[
        import constants.NOKConstants;

        import dtos.EmpleadoDTO;
        import dtos.FallaEquipoDTO;

        import events.NotificaFallaAgregada;

        import mx.collections.ArrayCollection;
        import mx.controls.Alert;
        import mx.events.FlexEvent;
        import mx.managers.PopUpManager;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;
        import mx.validators.Validator;

        [Bindable]
        public var acEmpleados:ArrayCollection;

        [Bindable]
        public var acFalla:ArrayCollection;

        public var fallaPop:FallaEquipoDTO;

        private function infoEmpleadoResult(event:ResultEvent):void {
            acEmpleados = event.result as ArrayCollection;
        }

        private function roEmpleadosFault(event:FaultEvent):void {
            Alert.show(event.fault.message, "Error");
        }

        private function init(event:FlexEvent):void {
            var empleado:EmpleadoDTO = new EmpleadoDTO();
            roEmpleados.infoEmpleado(empleado);
        }

        private function asignarClic():void {
            var validator:Array = Validator.validateAll([validateFechaInicio, validateFechaFin, validateEmpleados]);
            if (validator.length == 0) {
                //recogemos la informción y armamos el dto para enviar a la tabla.
                var item:FallaEquipoDTO = new FallaEquipoDTO();
                fallaPop.fechaInicio = txtFechaInicio.text;
                fallaPop.fechaFin = txtFechaFin.text;
                fallaPop.idEmpleadoReparador = ddlEmpleado.selectedItem.idEmpleado;
                fallaPop.nombreReparador = ddlEmpleado.selectedItem.nombre;
                fallaPop.paternoReparador = ddlEmpleado.selectedItem.paterno;
                fallaPop.maternoReparador = ddlEmpleado.selectedItem.materno;
                //acEmpleados.addItem(fallaPop);
                var aviso:NotificaFallaAgregada = new NotificaFallaAgregada("NotificaFallaAgregada", fallaPop);
                dispatchEvent(aviso);
                PopUpManager.removePopUp(this);
            } else {
                Alert.show("Llena todos los campos requeridos");
            }

        }
        ]]>
	</fx:Script>
    <fx:Declarations>
        <mx:StringValidator id="validateFechaInicio" source="{txtFechaInicio}" property="text" trigger="{buttonAsignar}"
                            triggerEvent="click"/>
        <mx:StringValidator id="validateFechaFin" source="{txtFechaFin}" property="text" trigger="{buttonAsignar}"
                            triggerEvent="click"/>
        <mx:StringValidator id="validateEmpleados" source="{ddlEmpleado}" property="text" trigger="{buttonAsignar}"
                            triggerEvent="click"/>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
        <s:RemoteObject id="roEmpleados" destination="empleadoBusiness" endpoint="{NOKConstants.SERVICE_URL}"
                        fault="roEmpleadosFault(event)">
            <s:method name="infoEmpleado" result="infoEmpleadoResult(event)"/>
        </s:RemoteObject>
        <s:RadioButtonGroup id="prioridadrbtgroup"/>
    </fx:Declarations>
    <s:controlBarContent>
        <s:Button label="Cancelar" click="PopUpManager.removePopUp(this)"/>
        <s:Spacer width="100%" height="10"/>
        <s:Button id="buttonAsignar" label="Asignar" styleName="primaryButton" click="asignarClic()"/>
    </s:controlBarContent>
    <s:VGroup left="0" top="0" width="100%" height="100%" paddingBottom="5" paddingLeft="5"
              paddingRight="5" paddingTop="5">
        <s:Label text="Equipo"/>
        <s:TextInput width="100%" id="txtEquipo" enabled="false"/>
        <s:Label text="Falla"/>
        <s:TextInput width="100%" id="txtFalla" enabled="false"/>
        <s:Label text="Subfalla"/>
        <s:TextInput width="100%" id="txtSubFalla" enabled="false"/>
        <s:Label text="Fecha de programación Inicio"/>
        <mx:DateField showToday="true" id="txtFechaInicio" yearNavigationEnabled="true" formatString="YYYY-MM-DD"
                      monthNames="['Enero', 'Febrero', 'Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre']"
                      dayNames="[D,L,M,M,J,V,S]"/>
        <s:Label text="Fecha de programación Fin"/>
        <mx:DateField showToday="true" id="txtFechaFin" yearNavigationEnabled="true" formatString="YYYY-MM-DD"
                      monthNames="['Enero', 'Febrero', 'Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre']"
                      dayNames="[D,L,M,M,J,V,S]" disabledRanges="{{rangeEnd: txtFechaInicio.selectedDate}}"/>
        <s:Label text="Responsable Asignado"/>
        <components:AutoComplete width="100%" id="ddlEmpleado" dataProvider="{acEmpleados}" labelField="nombreCompleto"
                                 creationComplete="init(event)"/>

    </s:VGroup>
</s:TitleWindow>
